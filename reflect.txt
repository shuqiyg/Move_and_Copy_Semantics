After finishing workshop2, I’ve learned how to retrieve contents and count the number of records from a text file using ifstream object. With the help of the std::chrono library, I’m able to calculate the time spent on a particular task within the program for future optimization. Also, by implementing both copy and move semantics for a class with a resource, I can identify the difference in performance between the two.

In StringSet module, I created an ifstream f to read in the contents and count the total number of records using while loops and getline(). In module TimedEvent, I included the <chrono> library, declared a std::chrono::duration variable in struct Event and 2 std::chrono::steady_clock::time_point data members for monitoring tasks that happened in each event. The implementation of copy and move semantics is also referred to the rule of five, I’ve explicitly defined copy constructor, copy assignment operator, move constructor, and move assignment operator in the class of StringSet to manage the resource string* names ( StringSet(const StringSet&); StringSet(StringSet&&) noexcept; StringSet& operator=(const StringSet&); StringSet& operator=(StringSet&&) noexcept).

The reason for the significant time difference between the copy and move operations is because move requires us only to transfer the value of pointer itself to a new object without duplicating (allocating new memory, then do the copying) contents. In other words, copying is expensive while moving is cheap.
